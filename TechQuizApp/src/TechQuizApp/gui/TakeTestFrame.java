/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TechQuizApp.gui;

import TechQuizApp.dao.PerformanceDao;
import TechQuizApp.dao.QuestionDao;
import TechQuizApp.pojo.AnswerPojo;
import TechQuizApp.pojo.AnswerStore;
import TechQuizApp.pojo.ExamPojo;
import TechQuizApp.pojo.PerformancePojo;
import TechQuizApp.pojo.QuestionPojo;
import TechQuizApp.pojo.QuestionStore;
import TechQuizApp.pojo.UserProfile;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Deepesh Dasani
 */
public class TakeTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TakeTestFrame
     */
    
    AnswerStore astore;
    QuestionStore qstore;
    int pos=0;
    int qno;
    
    ExamPojo exam;
    public TakeTestFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        lblusername.setText("Hello "+UserProfile.getUsername());
        txtQuestion.setEditable(false);
        astore=new AnswerStore();
        qno=1;
        
    }

    TakeTestFrame(ExamPojo exam) {
        this();
        this.exam=exam;
        qstore=new QuestionStore();
        this.loadQuestion();
        this.showQuestion();
        lblTitle.setText("Attemping "+exam.getLanguage()+" paper");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel20 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        lblusername = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        btnNext = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        jrbOp1 = new javax.swing.JRadioButton();
        jrbOp3 = new javax.swing.JRadioButton();
        jrbOp4 = new javax.swing.JRadioButton();
        jrbOp2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel20.setBackground(new java.awt.Color(0, 255, 153));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblTitle.setText("Attemping Java Paper");

        logout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 102, 102));
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
        });

        lblusername.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblusername.setForeground(new java.awt.Color(255, 102, 102));
        lblusername.setText("Hello User");

        lblQno.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 102, 102));
        lblQno.setText("Questions no :1");

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane20.setViewportView(txtQuestion);

        btnNext.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnDone.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        jrbOp1.setBackground(new java.awt.Color(0, 255, 153));
        buttonGroup1.add(jrbOp1);
        jrbOp1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jrbOp1.setForeground(new java.awt.Color(255, 102, 102));
        jrbOp1.setText("Option 1");

        jrbOp3.setBackground(new java.awt.Color(0, 255, 153));
        buttonGroup1.add(jrbOp3);
        jrbOp3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jrbOp3.setForeground(new java.awt.Color(255, 102, 102));
        jrbOp3.setText("Option 3");

        jrbOp4.setBackground(new java.awt.Color(0, 255, 153));
        buttonGroup1.add(jrbOp4);
        jrbOp4.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jrbOp4.setForeground(new java.awt.Color(255, 102, 102));
        jrbOp4.setText("Option 4");
        jrbOp4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOp4ActionPerformed(evt);
            }
        });

        jrbOp2.setBackground(new java.awt.Color(0, 255, 153));
        buttonGroup1.add(jrbOp2);
        jrbOp2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jrbOp2.setForeground(new java.awt.Color(255, 102, 102));
        jrbOp2.setText("Option 2");
        jrbOp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOp2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 0, 55)); // NOI18N
        jLabel1.setText("Good Luck");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblusername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addGap(28, 28, 28))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbOp1)
                    .addComponent(jrbOp3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbOp2)
                    .addComponent(jrbOp4))
                .addGap(145, 145, 145))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQno)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(242, 242, 242))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout)
                    .addComponent(lblusername))
                .addGap(1, 1, 1)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(126, 126, 126)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQno)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbOp1)
                    .addComponent(jrbOp2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbOp3)
                    .addComponent(jrbOp4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            QuestionPojo question=qstore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),qno,chosenAnswer,correctAnswer,exam.getLanguage());
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newAnswer);
            else{
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos,newAnswer);
                }
            }
        }
        pos--;
        if(pos<0)
            pos=qstore.getCount()-1;
        qno--;
        if(qno<=0)
            qno=qstore.getCount();
        lblQno.setText("Question no: "+qno);
        showQuestion();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        PaperSelectionFrame psf=new PaperSelectionFrame();
        psf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            QuestionPojo question=qstore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),qno,chosenAnswer,correctAnswer,exam.getLanguage());
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newAnswer);
            else{
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos,newAnswer);
                }
            }
        }
        int right=0,wrong=0;
        for(QuestionPojo question:qstore.getAllQuestions()){
            int qno=question.getQno();
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else{
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
            }
        }
        try{
        String reportCard="total Questions: "+qstore.getCount();
        reportCard+="\nRight Answer: "+right;
        reportCard+="\nWrong Answer: "+wrong;
        reportCard+="\nUnAttempted: "+(qstore.getCount()-(right+wrong));
        JOptionPane.showMessageDialog(null, reportCard,"Your Result!",JOptionPane.INFORMATION_MESSAGE);
        PerformancePojo performance=new PerformancePojo(exam.getExamId(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);
        PerformanceDao.addPerformance(performance);
        JOptionPane.showMessageDialog(null, "Your Performance have been Successfully added to the database","Performance Added!",JOptionPane.INFORMATION_MESSAGE);
        StudentsOptionFrame sof=new StudentsOptionFrame();
        sof.setVisible(true);
        this.dispose();
    }
    catch(SQLException ex){
    JOptionPane.showMessageDialog(null, "Error accessing database","Error!",JOptionPane.ERROR_MESSAGE);
    ex.printStackTrace();
    }//GEN-LAST:event_btnDoneActionPerformed
    }
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            QuestionPojo question=qstore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),qno,chosenAnswer,correctAnswer,exam.getLanguage());
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newAnswer);
            else{
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos,newAnswer);
                }
            }
        }
        pos++;
        if(pos>=qstore.getCount())
            pos=0;
        qno++;
        if(qno>qstore.getCount())
            qno=1;
        lblQno.setText("Question no: "+qno);
        showQuestion();
    }//GEN-LAST:event_btnNextActionPerformed

    private void jrbOp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbOp2ActionPerformed

    private void jrbOp4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOp4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbOp4ActionPerformed

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
         LoginFrame lf=new LoginFrame();
        lf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
        logout.setForeground(Color.white);
        Font f=new Font("Times New Roman",Font.ITALIC,14);
        logout.setFont(f);
    }//GEN-LAST:event_logoutMouseEntered

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:
        Color c=new Color(255,102,102);
        logout.setForeground(c);
        Font f=new Font("Times New Roman",Font.BOLD,14);
        logout.setFont(f);
    }//GEN-LAST:event_logoutMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
        }
    
    
    public void loadQuestion(){
        try{
            ArrayList<QuestionPojo> questionList=QuestionDao.getQuestionsByExamId(exam.getExamId());
            for(QuestionPojo qp:questionList){
                qstore.addQuestion(qp);
            }
        } catch (SQLException ex) {
           ex.printStackTrace();
           JOptionPane.showMessageDialog(null, "Error retriving data from database","Database Error!!",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void showQuestion(){
            QuestionPojo question=qstore.getQuestion(pos);
            
            buttonGroup1.clearSelection();
            txtQuestion.setText(question.getQuestion());
            jrbOp1.setText(question.getAnswer1());
            jrbOp2.setText(question.getAnswer2());
            jrbOp3.setText(question.getAnswer3());
            jrbOp4.setText(question.getAnswer4());
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                return;
            String chosenAnswer=answer.getChosenAnswer();
            switch(chosenAnswer){
                case "Answer1":
                    jrbOp1.setSelected(true);
                    break;
                case "Answer2":
                    jrbOp2.setSelected(true);
                    break;
                case "Answer3":
                    jrbOp3.setSelected(true);
                    break;
                case "Answer4":
                    jrbOp4.setSelected(true);
                    break;
            }
        }
    
    public String getUserAnswer(){
        if(jrbOp1.isSelected())
            return "Answer1";
        else if(jrbOp2.isSelected())
            return "Answer2";
        else if(jrbOp3.isSelected())
            return "Answer3";
        else if(jrbOp4.isSelected())
            return "Answer4";
        else 
            return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JRadioButton jrbOp1;
    private javax.swing.JRadioButton jrbOp2;
    private javax.swing.JRadioButton jrbOp3;
    private javax.swing.JRadioButton jrbOp4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblusername;
    private javax.swing.JLabel logout;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
}
